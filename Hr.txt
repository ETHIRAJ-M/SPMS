package SPMS;

import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

public class Hr implements ActionListener {
	// private static final long serialVersionUID = 1L;
	JLabel lblName, lblPass, lblTrain_Period, lblCourse_Name, lblPost, lblSalary, lblN, lblNVal, lblP, lblPVal, lblT,
			lblTVal, lblC, lblCVal, lblS, lblSVal, lblPo, lblPoVal;
	JTextField txtName, txtPass, txtTrain_Period, txtCourse_Name, txtPost, txtSalary;
	JButton btnPrev, btnNext, btnUpdate, btnShow;
	ResultSet rs, rs1;
	JFrame frame = new JFrame("ALL DETAIL");

	public static void main(String[] args)

	{

		Hr h = new Hr();
		h.fun();

	}

	private void fun() {

		JPanel pnlInput = new JPanel(new GridLayout(3, 2));

		lblName = new JLabel(" Name ");
		txtName = new JTextField(15);

		lblPass = new JLabel(" Password ");
		txtPass = new JPasswordField();

		lblTrain_Period = new JLabel("  Train_Period ");
		txtTrain_Period = new JTextField();

		lblCourse_Name = new JLabel("  Course_Name ");
		txtCourse_Name = new JTextField();

		lblPost = new JLabel("  Post ");
		txtPost = new JTextField();

		lblSalary = new JLabel(" Salary ");
		txtSalary = new JTextField();

		pnlInput.add(lblName);
		pnlInput.add(txtName);

		pnlInput.add(lblPass);
		pnlInput.add(txtPass);

		pnlInput.add(lblTrain_Period);
		pnlInput.add(txtTrain_Period);

		pnlInput.add(lblCourse_Name);
		pnlInput.add(txtCourse_Name);

		pnlInput.add(lblPost);
		pnlInput.add(txtPost);

		pnlInput.add(lblSalary);
		pnlInput.add(txtSalary);

		JPanel pnlButton = new JPanel(new GridLayout(1, 2));
		btnUpdate = new JButton("UPDATE");

		btnUpdate.addActionListener(this);
		btnShow = new JButton("SHOW");
		btnShow.addActionListener(this);
		pnlButton.add(btnShow);

		pnlButton.add(btnUpdate);
		JPanel pnlNavigate = new JPanel(new GridLayout(1, 2));
		btnPrev = new JButton("<<");
		btnPrev.setActionCommand("Prev");
		btnPrev.addActionListener(this);
		btnNext = new JButton(">>");
		btnNext.setActionCommand("Next");
		btnNext.addActionListener(this);

		pnlNavigate.add(btnPrev);
		pnlNavigate.add(btnNext);
		JPanel pnlNavAns = new JPanel(new GridLayout(4, 2));

		Container cn = frame.getContentPane();

		cn.setLayout(new BoxLayout(cn, BoxLayout.Y_AXIS));

		frame.add(pnlInput);
		frame.add(pnlButton);
		frame.add(pnlNavAns);
		frame.add(pnlNavigate);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setSize(1700, 1700);
		frame.setVisible(true);

	}

	@Override

	public void actionPerformed(ActionEvent evt) {

		String action = evt.getActionCommand();

		if (action.equals("UPDATE"))

		{
			update();

		} else if (action.equals("SHOW")) {
			firstValue();
		} else if (action.equals("Prev")) {
			preNavigation();
		} else if (action.equals("Next")) {
			nextNavigation();
		}

	}

	private void update() {
		try {
			Class.forName("oracle.jdbc.OracleDriver");

			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/XE", "system", "ethi");

			String sql = "update emp " + "set salary='" + txtSalary.getText() + "'" + "where name='" + txtName.getText()
					+ "'";

			Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

			st.execute(sql);
			clearControls();
		}

		catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
		}

	}

	private void preNavigation() {
		try {
			if (rs == null) {
				Class.forName("oracle.jdbc.OracleDriver");

				Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/XE", "system", "ethi");

				String sql = "select * from emp";

				Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

				rs = st.executeQuery(sql);
			}
			if (rs.previous()) {
				populateValue();
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
		}

	}

	private void nextNavigation() {
		try {
			if (rs == null) {
				Class.forName("oracle.jdbc.OracleDriver");

				Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/XE", "system", "ethi");

				String sql = "select * from emp";

				Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

				rs = st.executeQuery(sql);
			}
			if (rs.next()) {
				populateValue();
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
		}

	}

	private void populateValue() throws Exception {
		String name = rs.getString("name");

		String passw = rs.getString("pass");

		String tname = rs.getString("train_period");
		String cname = rs.getString("course_name");
		String po = rs.getString("post");
		String sal = rs.getString("salary");

		txtName.setText(name);

		txtPass.setText(passw);

		txtTrain_Period.setText(tname);
		txtCourse_Name.setText(cname);

		txtPost.setText(po);

		txtSalary.setText(sal);
	}

	private void clearControls() {
		txtName.setText("");
		txtPass.setText("");
		txtTrain_Period.setText("");
		txtCourse_Name.setText("");
		txtPost.setText("");
		txtSalary.setText("");

	}

	private void firstValue() {
		try {
			Class.forName("oracle.jdbc.OracleDriver");

			Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521/XE", "system", "ethi");

			String sql = "select * from emp";

			Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

			rs1 = st.executeQuery(sql);
			if(rs1.next())
			{
			String name = rs1.getString("name");

			String passw = rs1.getString("pass");

			String tname = rs1.getString("train_period");
			String cname = rs1.getString("course_name");
			String po = rs1.getString("post");
			String sal = rs1.getString("salary");

			txtName.setText(name);

			txtPass.setText(passw);

			txtTrain_Period.setText(tname);
			txtCourse_Name.setText(cname);

			txtPost.setText(po);

			txtSalary.setText(sal);
			}

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
		}
	}
}
